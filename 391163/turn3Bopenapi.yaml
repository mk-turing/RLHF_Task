openapi: 3.0.0
info:
  title: Secure WebSocket Chat API
  version: 1.0.0
  description: A secure WebSocket Chat API that requires JWT authentication for real-time communication.
servers:
  - url: ws://localhost:8080
paths:
  /chat:
    get:
      summary: Connect to the chat
      description: Establishes a WebSocket connection to the chat server. Requires a valid JWT in the `Authorization` header.
      operationId: connectChat
      security:
        - bearerAuth: []
      responses:
        '101':
          description: Successfully upgraded the connection to WebSocket.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Welcome to the chat!"
        '401':
          description: Unauthorized. Access denied due to invalid or missing authorization token.
        '400':
          description: Bad Request. The request could not be understood by the server.
        '500':
          description: Internal Server Error. An unexpected error occurred on the server.

    post:
      summary: Send a message
      description: Sends a chat message to the server. The server will echo back the same message to all connected clients. Requires a valid JWT in the `Authorization` header.
      operationId: sendMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The message that the user wants to send to the chat.
                  example: "Hello, Everyone!"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The message was successfully sent and echoed back to the client.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello, Everyone!"
        '401':
          description: Unauthorized. Access denied due to invalid or missing authorization token.
        '400':
          description: Bad Request. The message could not be processed.
        '500':
          description: Internal Server Error. An unexpected error occurred on the server.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT